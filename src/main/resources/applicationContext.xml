<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/task   
    http://www.springframework.org/schema/task/spring-task-3.1.xsd" default-autowire="byName">
	<!-- 装载属性配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:db.properties</value>
			</list>
		</property>
	</bean>
	<!-- 替代对象org.springframework.jdbc.datasource.DriverManagerDataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" dependency-check="none">
		<property name="driverClass">
			<value>${hibernate.connection.driver_class}</value>
		</property>
		<property name="jdbcUrl">
			<value>${hibernate.connection.url}</value>
		</property>
		<property name="user">
			<value>${hibernate.connection.username}</value>
		</property>
		<property name="password">
			<value>${hibernate.connection.password}</value>
		</property>
		<!-- 连接池初始化时建立的连接数 默认值是3 -->
		<property name="initialPoolSize">
			<value>3</value>
		</property>
		<!-- 连接的最大空闲时间 单位秒 默认是0-代表永远不会断开连接 超过设定时间的空闲连接将会断开 -->
		<property name="maxIdleTime">
			<value>20</value>
		</property>
		<!-- 连接池中拥有的最大连接数 默认值为15个 -->
		<property name="maxPoolSize">
			<value>100</value>
		</property>
		<!-- 连接池中保持的最小连接数 默认值为3个 -->
		<property name="minPoolSize">
			<value>10</value>
		</property>
		<!-- 将连接池的连接数保持在minpoolsize 必须小于maxIdleTime设置 默认值为0代表不处理 单位秒 -->
		<property name="maxIdleTimeExcessConnections">
			<value>15</value>
		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>jyx.model*</value><!-- 加载hibernate的jpa注解形式的实体类 -->
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.current_session_context_class">
					org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>

	</bean>
	<!-- 装载BaseDao中的hibernateTemplate -->
	<!-- HibernateTemplate -->
	<!--<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">-->
		<!--<property name="sessionFactory" ref="sessionFactory" />-->
	<!--</bean>-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 在该Bean的代码中标注@Transactional可以被事务管理器注入 -->



	<!-- 自动搜索@Component , @Service , @Repository等标注的类 不搜索@Controller的类 -->
	<context:component-scan base-package="jyx" annotation-config="true">
	</context:component-scan>
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- Spring 调度 -->
	<task:annotation-driven />
</beans>